generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String
  profilePicUrl String          @default("https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541")
  role          user_role       @default(USER)

  posts         post[]
  checkIns      UserCheckIns[]

  @@unique([email, name])
}

model post {
  id             Int       @id @default(autoincrement())
  price          Decimal   @db.Decimal(9, 2)
  title          String
  description    String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now())
  imageUrl       String    @default("https://media.istockphoto.com/id/1147544807/vector/thumbnail-image-vector-graphic.jpg?s=612x612&w=0&k=20&c=rnCKVbdxqkjlcs3xH87-9gocETqpspHFXu5dIGB4wuM=")
  authorEmail    String
  authorName     String
  stripeProductId String?
  stripePriceId   String?

  user           User      @relation(fields: [authorEmail, authorName], references: [email, name], map: "Post_authorEmail_authorName_fkey")

  @@index([authorEmail, authorName], map: "Post_authorEmail_authorName_fkey")
}

model UserCheckIns {
  id             Int       @id @default(autoincrement())
  email          String
  date           DateTime  @default(now())

  question1      String
  answer1        String
  question2      String
  answer2        String
  question3      String
  answer3        String
  personalNote   String

  sentimentLabel String?
  sentimentScore Int?
  productRec     String?

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  user           User      @relation(fields: [email], references: [email])

  @@index([email, date])
}

enum user_role {
  USER
  ADMIN
}